{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"Acerca de","text":"<p>bla bla bla...</p>"},{"location":"practica1-1/","title":"Practica_1.1","text":"<p>Repositorio para la practica 1.1 de IAW</p>"},{"location":"practica1-1/#instalacion-apache-php-y-mysql","title":"Instalaci\u00f3n Apache, PHP y MySQL","text":""},{"location":"practica1-1/#instalacion-de-apache","title":"Instalaci\u00f3n de Apache","text":"<p>Para la instalaci\u00f3n de Apache lo primero que haremos en nuestro archivo de creaci\u00f3n de la LAMP sera un <code>apt update</code> y <code>apt upgrade</code> para tener los paquetes actualizados y para automatizarlo tendremos que poner -y seguido de upgrade, despu\u00e9s realizamos la instalaci\u00f3n del servicio apache <code>apt install apache2 -y</code>, habilitamos el modulo rewrite para mejorar la est\u00e9tica <code>a2enmod rewrite</code>.  </p>"},{"location":"practica1-1/#configuracion-archivo-apache","title":"Configuraci\u00f3n archivo apache","text":"<p>Para configurar el archivo de apache, lo primero que haremos ser\u00e1 crear un archivo llamado <code>000-default.conf</code>el cual tendr\u00e1 el siguiente contenido: </p> <p>    #ServerName www.example.com    ServerAdmin webmaster@localhost    DocumentRoot /var/www/html/ <p>DirectoryIndex index.php index.html</p> <p>ErrorLog ${APACHE_LOG_DIR}/error.log    CustomLog ${APACHE_LOG_DIR}/access.log combined  </p> <p>Copiamos el archivo a sites-available con el comando <code>cp ../conf/000-default.conf /etc/apache2/sites-available</code>.  </p>"},{"location":"practica1-1/#instalacion-php","title":"Instalaci\u00f3n php","text":"<p>Utilizando el comando <code>sudo apt install php libapache2-mod-php php-mysql -y</code> realizamos la instalaci\u00f3n de algunos m\u00f3dulos que nos vendr\u00e1n bien como el relacionado con apache y con mysql. Ademas crearemos otro archivo .sh para automatizar la instalaci\u00f3n de php, en la cual tendremos que escribir el siguiente c\u00f3digo:  </p> <p>echo \"phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2\" | debconf-set-selections echo \"phpmyadmin phpmyadmin/dbconfig-install boolean true\" | debconf-set-selections echo \"phpmyadmin phpmyadmin/mysql/app-pass password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections echo \"phpmyadmin phpmyadmin/app-password-confirm password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections</p> <p>Para automatizar las preguntas de instalaci\u00f3n. A continuaci\u00f3n realizamos la instalaci\u00f3n de phpmyadmin <code>apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y</code> Realizamos un <code>systemctl restart apache2</code> para reiniciar el servicio apache y que se integre la configuraci\u00f3n realizada. Creamos un archivo de prueba php y lo copiamos en html <code>cp ../php/index.php /var/www/html</code>. Comprobamos con la ip que el servidor apache y php funcionan  Para mayor seguridad cambiamos el propietario y el grupo <code>chown -R www-data:www-data /var/www/html</code></p>"},{"location":"practica1-1/#instalacion-de-mysql","title":"Instalaci\u00f3n de MySQL","text":"<p>Para la instalaci\u00f3n de MySQL solo sera necesario el siguiente script <code>sudo apt install mysql-server -y</code>.  </p>"},{"location":"practica1-1/#instalacion-de-adminer","title":"Instalaci\u00f3n de adminer","text":"<p>A continuacion realizaremos los pasos para instalar adminer en el servidor.  </p>"},{"location":"practica1-1/#paso-1-creamos-un-directorio-para-adminer","title":"Paso 1. Creamos un directorio para Adminer","text":"<p>Creamos una carpeta para adminer.  </p> <p>mkdir -p /var/www/html/adminer  </p>"},{"location":"practica1-1/#paso-2-descargamos-adminer","title":"Paso 2. Descargamos Adminer","text":"<p>Nos descargamos adminer.  </p> <p>wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php -P /var/www/html/adminer</p>"},{"location":"practica1-1/#paso-3-renombramos-el-nombre-del-script-de-adminer","title":"Paso 3. Renombramos el nombre del script de Adminer","text":"<p>Para facilitarnos la entrada a adminer le cambiaremos el nombre.  </p> <p>mv /var/www/html/adminer/adminer-4.8.1-mysql.php /var/www/html/adminer/index.php</p>"},{"location":"practica1-1/#paso-4-modificamos-el-propietario-y-el-grupo-del-archivo","title":"Paso 4. Modificamos el propietario y el grupo del archivo","text":"<p>Para mayor seguridad cambiamos el usuario y grupo de adminer.</p> <p>chown -R www-data:www-data /var/www/html/adminer  </p> <p>Compr\u00e1bamos que funciona la pagina con adminer. </p>"},{"location":"practica1-1/#instalacion-de-goaccess","title":"Instalaci\u00f3n de GoAccess","text":"<p>Vamos a realizar la instalaci\u00f3n de GoAccess para ver de forma m\u00e1s c\u00f3moda las estad\u00edsticas de de la pagina.</p>"},{"location":"practica1-1/#paso-1-instalacion-goacces","title":"Paso 1. Instalaci\u00f3n GoAcces","text":"<p>Para instalar goAccess implementamos el siguiente script dentro del archivo tool que hemos creado previamente.</p> <p>apt install goaccess -y </p>"},{"location":"practica1-1/#paso-2-creamos-un-directorio-para-los-informes-estadisticos","title":"Paso 2. Creamos un directorio para los informes estad\u00edsticos","text":"<p>Creamos un directorio para guardar los informes estad\u00edsticos que se generen.</p> <p>mkdir -p /var/www/html/stats</p>"},{"location":"practica1-1/#paso-3-ejecutamos-goaccess-en-background","title":"Paso 3. Ejecutamos GoAccess en background","text":"<p>Para que se actualice constantemente en tiempo real realizamos la siguiente configuraci\u00f3n:</p> <p>goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html --daemonize Comprobamos que funciona el GoAccess. </p>"},{"location":"practica1-1/#control-de-acceso-con-htaccess","title":"Control de acceso con .htaccess","text":"<p>Vamos a realizar un control para el stats, para esto creamos un archivo de configuraci\u00f3n que nombraremos como <code>000-default-htaccess.conf</code> y le introduciremos el siguiente c\u00f3digo:</p> <p>  #ServerName www.example.com  ServerAdmin webmaster@localhost  DocumentRoot /var/www/html <p>DirectoryIndex index.php index.html</p> <p>    AllowOverride All  </p> <p>ErrorLog ${APACHE_LOG_DIR}/error.log  CustomLog ${APACHE_LOG_DIR}/access.log combined  </p> <p>Aparte crearemos un archivo de configuraci\u00f3n llamado <code>.htaccess</code> con el siguiente codigo:</p> <p>AuthType Basic AuthName \"Acceso restringido\" AuthBasicProvider file AuthUserFile \"/etc/apache2/.htpasswd\" Require valid-user  </p> <p>Lo copiamos en sites-available <code>cp ../conf/000-default-htaccess.conf /etc/apache2/sites-available</code>, deshabilitamos el virtualhost que hay por defecto utilizando <code>a2dissite 000-default.conf</code>, habilitamos el nuevo virtualhost <code>a2ensite 000-default-htaccess.conf</code> y recargamos la configuraci\u00f3n de apache <code>systemctl reload apache2</code>. A continuacion copiamos el archivo .htaccess <code>cp ../conf/.htaccess /var/www/html/stats</code>. La contrase\u00f1a y usuario esta dentro de un archivo .env el cual esta oculto por protecci\u00f3n. Comprobamos que al intentar acceder a stats nos solicita un usuario y una contrase\u00f1a. </p>"}]}